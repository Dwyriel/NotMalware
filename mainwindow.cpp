#include "mainwindow.h"
#include "./ui_mainwindow.h"

MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    ui->labelThanks->setHidden(true);
    connect(ui->btnSend, &QPushButton::pressed, this, &MainWindow::btnSendPressed);
    loadGif();
    setValidators();
}

MainWindow::~MainWindow()
{
    delete ui;
    delete gifMovie;
    delete validator;
}

void MainWindow::setValidators(){
    rxCreditCard.setPattern(R"(^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\d{3})\d{11})$)");
    rxDate.setPattern(R"(^((0[1-9])|(1[0-2]))\/((202[3-9])|(20[3-9][0-9]))$)");
    rxSecCode.setPattern(R"(^(?:[0-9]{3})$)");
    validator = new QRegExpValidator(this);
}

void MainWindow::loadGif(){
    gifMovie = new QMovie(":/NotMalware/images/uwu-please.gif");
    gifMovie->setParent(this);
    if(!gifMovie->isValid())
        ui->labelGif->setText("Not valid");
    else{
        gifMovie->setSpeed(80);
        gifMovie->setCacheMode(QMovie::CacheAll);
        ui->labelGif->setMovie(gifMovie);
        gifMovie->start();
    }
}

void MainWindow::btnSendPressed(){
    ui->labelThanks->setVisible(true);
    QString userInput = ui->inputCardNum->text();
    int pos = 0;
    validator->setRegExp(rxCreditCard);
    if(validator->validate(userInput, pos) != QValidator::Acceptable){
        ui->labelThanks->setText("Invawid cwedit cawd");
        return;
    }
    validator->setRegExp(rxDate);
    userInput = ui->inputExpDate->text();
    if(validator->validate(userInput, pos) != QValidator::Acceptable){
        ui->labelThanks->setText("Invawid expiwartion date");
        return;
    }
    validator->setRegExp(rxSecCode);
    userInput = ui->inputSecCode->text();
    if(validator->validate(userInput, pos) != QValidator::Acceptable){
        ui->labelThanks->setText("Invawid secuwity code");
        return;
    }
    ui->labelThanks->setText("Sent, th-thanks");
}

/*
 * Read binary data from file and use as a device for QMovie
 *
#include <fstream>
std::ifstream file ("/path/to/file", std::ios::binary | std::ios::ate);
std::streamsize size = file.tellg();
file.seekg(0, std::ios::beg);
char buffer[size];
if(!file.read(buffer, size)){
    ui->labelGif->setText("Not valid");
    return;
}
gifByteArray = new QByteArray();
gifByteArray->setRawData(buffer, sizeof(buffer));
gifByteArray->prepend("GIF"); //removed the first 3 characters then added it again, for test purposes
gifBuffer = new QBuffer();
gifBuffer->setData(*gifByteArray);
gifBuffer->open(QIODevice::ReadOnly);
gifMovie = new QMovie(gifBuffer);
if(!gifMovie->isValid())
    ui->labelGif->setText("Not valid");
else{
    gifMovie->setCacheMode(QMovie::CacheAll);
    gifMovie->setSpeed(80);
    ui->labelGif->setMovie(gifMovie);
    gifMovie->start();
}
connect(gifMovie, &QMovie::finished, this, &MainWindow::gifFinished);
//call "gifMovie->start()" again on "MainWindow::gifFinished" to loop the gif

void MainWindow::gifFinished(){
    gifMovie->start();
}*/
